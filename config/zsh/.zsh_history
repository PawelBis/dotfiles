cd ..
ls
mkdir Playground
hx
hx
hx ~/.config/helix/config.toml
hx
hx ~/.config/helix/languages.toml
hx
hx ~/.config/helix/languages.toml
hx
hx ~/.config/helix/config.toml
hx
hx ~/.config/helix/config.toml
hx ~/.config/helix/languages.toml
hx
hx ~/.config/helix/languages.toml
hx
hx ~/.config/helix/languages.toml
hx ~/.config/helix/config.toml
hx
hx ~/.config/helix/languages.toml
hx
hx ~/.config/helix/languages.toml
hx
hx ~/.config/helix/languages.toml
hx
hx ~/.config/helix/languages.toml
hx
hx
cd Egnine
cd Engine
ls
cd src
ls
cd ..
hx
hx ~/.config/helix/languages.toml
hx
hx ~/.config/helix/languages.toml
clang-format -style=llvm -dump-config > .clang-format
clang-format
brew install clang-format
clang-format -style=llvm -dump-config > .clang-format
hx .clang-format
fg
hx
hx
clang-format -i src/Engine/Application.h
hx
hx .clang-format
clang-format -i src/Engine/Application.h
hx
hx .clang-format
clang-format -i src/Engine/Application.h
cat src/Engine/Application.h
hx .clang-format
clang-format -i src/Engine/Application.h
cat src/Engine/Application.h
hx clang-format
hx .clang-format
hx ~/.config/helix/languages.toml
hx 
hx .clang-format
hx
hx .clang-format
hx
hx .clang-format
hx
clang-format src/Engine/Application.cpp
rm .clang-format
hx .clang
clang-format -style=llvm -dump-config > .clang-format
hx .clang-format
clang-format src/Engine/Application.cpp
hx
hx
touch src/Engine/Core.h
hx
hx 
hx
hx
hx .clang-format
hx
rm src/Engine/Core.h
hx CMakeLists.txt
./build.sh
ls
cd include
ls
ls -a
cd ..
rm include
rm -rf include
cd build
ls
cd ..
hx CMakeLists.txt
./build
./build.sh
ls
cd build
ls
cd ..
cd ..
ls
cd ..
ls
fd include
cd engine
ls
cd Engine
ls
hx build.sh
ls
cd build
ls
ls
cd ..
hx CMakeLists.txt
./build.sh
ls
cd build
ls
cd ..
fd include
fd src
cd build/CMakeFiles/engine.dir/src
ls
cd Engine
ls
cd ..
cd ..
cd ..
cd ..
fd *.h
fd .h
cd ..
cd ..
cd Engine
fd .h
hx CMakeLists.txt
./build.sh
ls
cd build
ls
cd ..
rm engine.pc.in
ls
sls -a
ls -a
cd build
ls
cd ..
cd ..
ls
cd Playground
clear
ls
mkdir src
touch src/main.cpp
touch CMakeLists.txt
ls
cd src
ls
cd ..
hx CMakeLists.txt
cd Source/engine/Playground
mkdir build
cd build
cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_EXPORT_COMPILE_COMMANDS=ON\

hx ../CMakeLists.txt
cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_EXPORT_COMPILE_COMMANDS=ON\

hx ../CMakeLists.txt
cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_EXPORT_COMPILE_COMMANDS=ON\

cd ..
ls
cd src
ls
cd ..
hx CMakeLists.txt
cd build
cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_EXPORT_COMPILE_COMMANDS=ON\

cd ..
hx src/main.cpp
cd build
make
make -v
make
cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_EXPORT_COMPILE_COMMANDS=ON\

make
ls
hx Makefile
hx ../CMakeLists.txt
cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_EXPORT_COMPILE_COMMANDS=ON\

make
hx ../CMakeLists.txt
cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_EXPORT_COMPILE_COMMANDS=ON\

make
hx ../CMakeLists.txt
cd ..
rm build
rm -rf build
mkdir build
cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_EXPORT_COMPILE_COMMANDS=ON\

ls
ls -a
cd build
cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_EXPORT_COMPILE_COMMANDS=ON\

make
hx ../CMakeLists.txt
cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_EXPORT_COMPILE_COMMANDS=ON\

make
hx ../CMakeLists.txt
cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_EXPORT_COMPILE_COMMANDS=ON\

make
hx ../CMakeLists.txt
cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_EXPORT_COMPILE_COMMANDS=ON\

make
hx ../CMakeLists.txt
cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_EXPORT_COMPILE_COMMANDS=ON\

hx ../CMakeLists.txt
cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_EXPORT_COMPILE_COMMANDS=ON\

make 
cd /Users/aomame/Source/engine/Playground../Engine/build
cd ../Engine/build
hx ../CMakeLists.txt
cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_EXPORT_COMPILE_COMMANDS=ON\

hx ../CMakeLists.txt
cd ..
cd ../Engine/build
cd ../../
cd Playground
cd build
cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_EXPORT_COMPILE_COMMANDS=ON\

make
hx ../CMakeLists.txt
cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_EXPORT_COMPILE_COMMANDS=ON\

make
hx ../CMakeLists.txt
cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_EXPORT_COMPILE_COMMANDS=ON\

make
cd ..
hx
hx CMakeLists.txt
cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_EXPORT_COMPILE_COMMANDS=ON\

ls
cd build
cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_EXPORT_COMPILE_COMMANDS=ON\

make
hx ../src/main.cpp
make
cd ..
ls
cd ..
ls
hx CMakeList.txt
ls
mkdir build
ls
hx CMakeList.txt
ls
cd build
hx ../Engine/build.sh
clear
cd ../Engine
ls
mv build.sh ../build.sh
mv conanfile.txt ../conanfile.txt
ls
rm CMakeUserPresets.json
rm compile_commands.json
ls
ls -a
mv .clang-format ../.clang-format
cd .cache
ls
cd clangd
ls
cd ..
cd ..
rm .cache
rm -rf .cache
ls
ls -a
cd ..
ls
rm -rf build
hx build.sh
./build.sh
ls
mv CMakeList.txt CMakeLists.txt
./build.sh
hf CMakeLists.txt
hfx CMakeLists.txt
hx CMakeLists.txt
./build.sh
hx Engine/CMakeLists.txt
./build.sh
ls
cd build
ls
cd Engine
ls
ls_-a
ls -a
cd ..
cd Playground
ls
cd ..
make
ls
cd Engine
ls
cd ..
cd Playground
ls
cd ..
ls
cd ..
cd build/Playground
ls
ls -a
cd ..
cd ..
nvim build.sh
hx build.sh
ls
cd Playground
ls
cd build
ls
cd Playground
./Playground
cd ..
rm build
rm -rf build
ls
ls -a
cd ..
./build.sh
ls
cd Playground
ls
cd ..
fd Playground
cd build
ls
./Playground
cd Playground
ls
ls -a
cd ..
cd ..
hx
./build.sh
hx
./build.sh
cd build
ls
./Playground
./Playgrounde
hx
ls
cd ..
hx
ls
hx
./build.sh
hx
./build.sh
git status
ls
hx .gitignore
git init
git stauts
git status
hx .gitignore
git status
hx .gitignore
git status
hx .gitignore
hx .gitignore
git status
git add .
git commit --init commit
git commit -m "Initial commit"
git remote add origin https://github.com/PawelBis/Engine.git
git stauts
git status
git log
git push
git push --set-upstream origin main
hx CMAk
hx
./build.sh
cd build
ls
cd lib
cd ..
fd lib
ccmake
ccmake .
ls
ccmake CMakeCache
ccmake CMakeCache.txt
clear
git reset --hard
hx build.sh
ls
hx compile_commands.json
touch Engine/src/Engine.h
hx Engine/src/Engine
hx Engine/src/Engine.h
touch Engine/src/Engine/EntryPoint.h
hx Engine/src/Engine/EntryPoint.h
make
ls
cd Playground/
ls
cd ..
cd build
make
hx
cd ..
mv Playground/src/main.cpp Playground/src/PlaygroundApp.cpp
cd build
make
hx ../CMakeLists.txt
hx
make
hx
make
.//PlaygroundEd
./PlaygroundEd
ls
./PlaygroundEd
cd Playground
cd ..
cd PlaygroundEd
hx
/Users/aomame/Source/engine/build/PlaygroundEd ; exit;
echo $HOME
cd Source/engine
cd build/clion
ls
ls
./PlaygroundEd
cd ../
./PlaygroundEd
make
cd ..
clear
hx build.sh
exit
cd source/vcpkg
ls
cd scripts
\ls
ls
cd buildsystems
ls
echo $PWD
echo $PWD | pbcopy
cd /Users/aomame/.conan2/p/spdlo44b4c19986bc4/p/include
ls
cd spdlog
ls
exit
cd source/engine
hx build/Debug/conan_toolchain.cmake
cd Source/engine/e
cd Source/engine/Engine
ls
mkdir include
hx CMakeLists.txt
hx build.sh
echo $PWD
echo $PWD | pbcopy
cd build
ls
hx ../CMakeLists.txt
cd ..
cd ..
./build.sh
./build/PlaygroundEd
hx
cd build
make
./PlaygroundEd
cd ../
hx
cd build
make
./PlaygroundEd
hx
make
fg
make
./PlaygroundEd
hx
make
hx
fg
make
hx
make
./PlaygroundEd
hx
make
./PlaygroundEd
hx
make
./PlaygroundEd
hx
make
./PlaygroundEd
git status
git add .
git status
git add .
cd .
git add .
git status
cd ..
git add .
git status
git commit -m "ADd entry point"
git push
hx
cd build
make
./PlaygroundEd
make
cd ..
./build.sh
cd build
./PlaygroundEd
hx
nvim
rg DEFINE
cc
brew install cc
cc
ninja
Ninja
brew install ninja
brew reinstall ninja
cd ..
ls
git reset --hard
ls
git status
rm .DS_Store
rm -rf .idea
rm -rf .vscode
ls -a
rm -rd .idea
rm CMakeCache.txt
rm -rf CMakeFiles
rm -rf CMakeUserPresets.json
ls
ls -a
hx build.sh
ls
cd cmake-build-debug
ls
cd ..
rm -rf cmake-build-debug
ls -a
fd conanbuildinfo.cmake
fd conanbuildinfo
fd conan
ls
cd build
ls
cd ..
fd conan*
fd
brew install fd
fd conan
fd -r
fd -r conan
fd --help
fd --help | less
fd conan*
ls
cd build
fd conan
cd ..
fd --help | less
fd conan -I
./build.sh
fd conan -I
hx build.sh
./build.sh
hx build.sh
conan install . -s build_type=Debug --install-folder=build/debug
ls
rm conanfile.txt
rm -rf build
ls -a
hx .git
hx .gitignore
git status
git add .
git commit -m "Remove conanfile.tst"
git commit --amend
git push
vcpkg
vcpkg search spdlog
brew uninstall vcpkg
cd ../
git clone git clone https://github.com/Microsoft/vcpkg.git
git clone https://github.com/Microsoft/vcpkg.git
./vcpkg/bootstrap-vcpkg.sh
vcpkg search spdlog
vcpkg
ls
cd vcpkg
ls
./vcpkg
cd ..
hx ../.config/zsh/.zshrc
source ~/.config/zsh/.zshrc
vcpkg
cd engine
vcpkg search spdlog
vcpkg install spdlog
cd ../vcpkg
git pull
vcpkg update
brew install pkg-config
vcpkg install spdlog
cd ../engine
git log
git checkout HEAD~2
git status
ls
./build.sh
hx build.sh
cd build
ls
cd clion
ls
cd ..
ls
ls
cd build
ls
cd clion
ls
cd clion
conan install . \

cd ..
cd ..
conan install . --output-folder=build/clion\

cd ..
ls
cd engine
ls
cp conanfile.txt conanfile.txt2
git checkout master
git checkout main
git status
mv conanfile.txt2 conanfile.txt
conan install . --output-folder=build/clion\

hx build.sh
ls
rm build
rm -rf build
./build.sh
ls
cd build
ld
cd ..
hx build.sh
./build.sh
cd build
ls
cd ..
hx build.sh
rm -rf build
./build.sh
hx build.sh
hx build.sh
rm -rf build
./build.sh
hx build.sh
rm -rf build
./build.sh
hx build.sh
hx build.sh
./build.sh
hx build.sh
rm -rf build
./build.sh
hx build.sh
hx build.sh
./build.sh
cd build
ls
cd ..
./build.sh Release
cd Build
ls
cd ..
hx build.sh
hx build.sh
git status
git diff
git add .
git commit -m "Improve build script, bring back conan"
git push
hx
./build
./build.sh
hx conanfile.txt
hx Engine/CMakeLists.txt
./build.sh
hx build.sh
./build.sh
hx conanfile.txt
./build.sh
hx compile_commands.json
fd conan -I
rg CONAN_INCLUDE
rg include
rg INCLUDE
hx
./build.h
./build.sh
hx
rm -rf Engine/build
./build.sh
cd Engine
ls
cd ..
ls
hx 
./build.sh
hs
hx
./build.sh
hx
./build.sh
hx
./build.sh
hx
./build.sh
hx
./build.sh
hx
./build.sh
hx
hx build.sh
cd build/debug
cmake install
cd ../../..
cd engine
./build.sh
hx
./build.sh
hx
./build.sh
hx build.sh
./build.sh
hx build.sh
./build.sh
cd build/
ls
cd Debug
ls
make
make -V
export VERBOSE=1
make
make > log
hx log
rm log
vcpkg
vcpkg remove spdlog
cd ../..
hx
./build.sh
hx
./build.sh
hx builx.sh
hx build.sh
vcpkg install spdlog
hx
./build.sh
ls
cd build
cd Debug
mkdir Degug
cd ..
hx build.sh
./build.sh
cd debug
cd build
ls
mkdir Debug
cd ..
./build.sh
hx build.sh
./build.sh
hx build.sh
./build.sh
vcpkg
vcpkg list
hx 
./build.sh
hx
./build.sh
hx
./build.sh
fd CMakeCache*
fd CMakeCache* -I
fd CMake* -I
fd CMake
fd CMake -I
hx build/Debug/CMakeCache.txt
hx ../vcpkg/scripts/buildsystems/vcpkg.cmake
rm -rf build
./build.sh
mkdir build
mkdir build/Debug
./build.sh
hx 
./build.sh
hx
./build.sh
./build/Debug/PlaygroundEg
./build/Debug/PlaygroundEd
clear
git status
git add .
git switch -c feature/switch-to-conan
git status
git commit -m "Switch to vcpkg"
git switch main
git status
git reset --hard
git log
./build.sh
hx
./build.sh
hs
hx
./build.sh
hx
./build.sh
git status
git stash
git branch
git checkout feature/switch-to-conan
hx
./build.sh
git diff
git status
ls
hx build.sh
rm conanfile.txt
hx build.sh
./build.sh
vcpkg list
vcpkg
hx
./build.sh
hx
vcpkg remove spdlog
vcpkg install spdlog
hx
./build.sh
hx
./build.sh
hx
./build.sh
rm -r build/Debug/*
ls build/Debug
ls -a build/Debug
./build.sh
hx
./build/Debug/PlaygroundEd
git diff
git reset --hard
git switch main
rm -rf build/Debug
hx build.sh
./build.sh
hx
hx
hx 
./build.sh
hx
./build.sh
hx
./build.sh
ls
hx conanfile.txt
./build.sh
hx
./build.sh
hx
./build.sh
hx conanfile.txt
./build.sh
hx build/Debug/conan_toolchain.cmake
hx CMakeLists.txt
./build.sh
git status
git add .
git commit -m "some debug"
git switch feature/switch-to-conan
git status
rm -r build/Debug/*
hx
./build.sh
hx
git status
git stash
git switch main
hx CMakeLists.txt q
hx CMakeLists.txt
git switch feature/switch-to-conan
hx CMakeLists.txt
./build.sh
rm -r build/Debug/*
./build.sh
hx
./build.sh
hx
./build.sh
git switch main
git reset --hard
git switch main
./build.sh
hx build/Debug/conan_toolchain.cmake
hx CMakeLists.txt
./build.sh
hx build/Debug/conan_toolchain.cmake
cd build/Debug
rm -r *
cd ../..
./build.sh
hx build.sh
cd build/Debugt
cd build/Debug
cmake ../.. -G Ninja -DCMAKE_TOOLCHAIN_FILE=conan_toolchain.cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_EXPORT_COMPILE_COMMANDS=ON\

cmake --build .
hx conan_toolchain.cmake
cmake ../.. -G Ninja -DCMAKE_TOOLCHAIN_FILE=conan_toolchain.cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_EXPORT_COMPILE_COMMANDS=ON\

cmake --build .
hx conan_toolchain.cmake
cmake ../.. -G Ninja -DCMAKE_TOOLCHAIN_FILE=conan_toolchain.cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_EXPORT_COMPILE_COMMANDS=ON\

hx ../../CMakeLists.txt
cmake ../.. -G Ninja -DCMAKE_TOOLCHAIN_FILE=conan_toolchain.cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_EXPORT_COMPILE_COMMANDS=ON\

hx ../../CMakeLists.txt
cd ../..
./build.sh
git switch feature/switch-to-conan
git reset --hard
git switch feature/switch-to-conan
rg spdlog
rg spdlog --no-ignore
git switch main
./build.sh Release
hx 
./build.sh
./build.sh Release
./build/Release/PlaygroundEd
clear
hx conanfile.txt
hx build.sh
./build.sh
./build.sh
hx
hx build.sh
./build.sh
hx build.sh
hx build.sh
build.sh
./build.sh
git diff
hx build.bat
./build.bat
rm build.bat
git status
git diff
git add .
git commit --amend
cd Engine
ls
cd ../Playground
ls
cd ..
exit
hx Source/vcpkg/scripts/buildsystems/vcpkg.cmake
exit
: 1680204704:0;clear
: 1680204724:0;mv Downloads/nvim ~/.config/nvim
: 1680204733:0;rm -rf .config/nvim
: 1680204734:0;mv Downloads/nvim ~/.config/nvim
: 1680204736:0;nvim
